#!/usr/bin/python
import os
import re
import subprocess
import sys


commit_msg_filepath = sys.argv[1]
# get url remote in gitconfig
pr = subprocess.Popen("/usr/bin/git config --get remote.origin.url",
                      cwd=os.getcwd(),
                      shell=True,
                      stdout=subprocess.PIPE,
                      stderr=subprocess.PIPE)
(out, error) = pr.communicate()
# get name trac
search = re.search(
    '(?:^http.*/(?P<http_name>\D[^\/]*)\/\D[^\/]+$|^git.*:(?P<git_name>\D[^\/]*)\/)',
    out)

val = "<+trac_name+>"
if search:
    group_dicts = search.groupdict()
    val = group_dicts['git_name'] or group_dicts['http_name']
    if 'affinitic' in val:
        val = 'affinitic'
    if 'arsia' in val:
        val = 'arsia'
    if 'cerise' in val:
        val = 'arsia'

with open(commit_msg_filepath, 'r+') as f:
    content = f.read()
    if "# 7==========>" in content:
        sys.exit(0)
    f.seek(0, 0)
    if os.path.isfile('.git/COMMIT_LASTFAILED'):
        message_file = open('.git/COMMIT_LASTFAILED', 'r')
        message = message_file.read()
        f.write(message)
        os.remove(message_file.name)
    else:
        f.write("\n\nThis refs %s #\n\n" % (val))
    f.write("# 7==========>\n")
    f.write("# Allowed actions:\n")
    f.write("# testing, production, close\n")
    f.write(content)
